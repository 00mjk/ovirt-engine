package org.ovirt.engine.core.utils.osinfo;

import java.io.IOException;

import org.antlr.v4.runtime.ANTLRFileStream;
import org.antlr.v4.runtime.BaseErrorListener;
import org.antlr.v4.runtime.BufferedTokenStream;
import org.antlr.v4.runtime.RecognitionException;
import org.antlr.v4.runtime.Recognizer;
import org.antlr.v4.runtime.misc.NotNull;
import org.antlr.v4.runtime.misc.Nullable;
import org.antlr.v4.runtime.tree.ParseTreeWalker;

public class OsinfoPropertiesParser {

    /**
     * walk the parse tree which is auto-generated by antlr from the Osinfo.g4 grammar file. walking the parse
     * tree will throw an exception in case the file structure doesn't follow the grammar.
     *
     * @param path
     */
    public static void parse(String path) {
        ParseTreeWalker walker = new ParseTreeWalker();
        OsinfoLexer osinfoLexer;
        try {
            osinfoLexer = new OsinfoLexer(new ANTLRFileStream(path));
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        OsinfoParser osinfoParser = new OsinfoParser(new BufferedTokenStream(osinfoLexer));
        osinfoParser.addErrorListener(getListener());
        walker.walk(new OsinfoBaseListener(), osinfoParser.parse());
    }

    private static BaseErrorListener getListener() {
        return new BaseErrorListener() {
            @Override public void syntaxError(@NotNull Recognizer<?, ?> recognizer,
                    @Nullable Object offendingSymbol,
                    int line,
                    int charPositionInLine,
                    @NotNull String msg,
                    @Nullable RecognitionException e) {
                throw new RuntimeException("osinfo properties syntax error: " +
                        ("line " + line + ":" + charPositionInLine + " " + msg));
            }
        };
    }
}
