<?xml version="1.0" encoding="UTF-8"?>

<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.ovirt.api</groupId>
  <artifactId>model</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <name>oVirt RESTAPI Model</name>

  <properties>

    <!-- Always use UTF-8 for source code: -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- The version of the metamodel used to specify the model and to generate
         code from it: -->
    <metamodel.version>1.0.0-SNAPSHOT</metamodel.version>

  </properties>

  <dependencies>

    <dependency>
      <groupId>org.ovirt.api</groupId>
      <artifactId>metamodel-annotations</artifactId>
      <version>${metamodel.version}</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <!--- Make sure we use Java 8: -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <!-- Attach the source files. Note that by default this attachment
           is bound to the "package" phase, but we need to do it during
           the "compile" phase becase these sources are needed to compile
           and execute the tests of other modules, and the "test" lifecycle
           doesn't include the "package" phase. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

</project>
